1. Why vite?
    - When cold-starting the dev server, a bundler-based build setup has to eagerly crawl and build your entire application 
        before it can be served.
    - Vite improves the dev server start time by first dividing the modules in an application into two categories: 
        1. Dependencies : (plain-JavaScript)
            - Vite pre-bundles dependencies using esbuild. 
            - esbuild is written in Go and pre-bundles dependencies 10-100x faster than JavaScript-based bundlers.
        2. Source code : (non-plain JavaScript -- jsx, css, ect..)
            - Vite serves source code over native ESM. 
            - This is essentially letting the browser take over part of the job of a bundler: Vite only needs to transform and 
                serve source code on demand, as the browser requests it. 
            - Code behind conditional dynamic imports is only processed if actually used on the current screen.
    - Slow Updates(overcomes with HMR):
        1. In Vite, HMR is performed over native ESM. 
        2. When a file is edited, Vite only needs to precisely invalidate the chain between the edited module and its closest HMR 
            boundary (most of the time only the module itself), making HMR updates consistently fast regardless of the size of 
            your application.
    - Optimized bundle for production: (with rollup)
        1. code with tree-shaking, lazy-loading and common chunk splitting (for better caching).
        2. code splitting.

2. Roles of esbuild and rollup in vite:
    * esbuild: Used during development for its speed, HMR, and CommonJS to ES module conversion.
    * Rollup: Used for creating optimized production builds and as the basis for Vite's plugin system.

3. Features:    
    1. NPM Dependency Resolving and Pre-Bundling :
        - Pre-bundle them to improve page loading speed and convert CommonJS / UMD modules to ESM. 
        - The pre-bundling step is performed with esbuild and makes Vite's cold start time significantly faster than any 
            JavaScript-based bundler.
    2. Hot Module Replacement 
    3. TypeScript support.
        - Transpile only: 
            - Note that Vite only performs transpilation on .ts files and does NOT perform type checking because it need to 
                compile all code and need to check types which needs to compromise vite speed.
            - It assumes type checking is taken care of by your IDE and build process.
        - Vite uses esbuild to transpile TypeScript into JavaScript which is about 20~30x faster than vanilla tsc, and HMR 
            updates can reflect in the browser in under 50ms.






